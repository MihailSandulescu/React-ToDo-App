{"version":3,"sources":["components/Todo.js","components/Form.js","components/FilterButton.js","App.js","index.js"],"names":["Todo","props","useState","isEditing","setEditing","newName","setNewName","editFieldRef","useRef","editButtonRef","wasEditing","value","ref","useEffect","current","usePrevious","editingTemplate","className","onSubmit","e","preventDefault","editTask","id","type","onChange","target","placeholder","onClick","name","viewTemplate","defaultChecked","completed","toggleTaskCompleted","htmlFor","deleteTask","focus","Form","setName","addTask","autoComplete","FilterButton","aria-pressed","isPressed","setFilter","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","updatedTasks","map","alert","TaskList","key","completedTasks","length","FilterButtonList","tasksToGo","tasksToGoNoun","tasksCompleted","tasksCompletedNoun","taskListHeadingText","listHeadingRef","prevTaskLength","subject","newTask","nanoid","tabIndex","role","aria-labelledby","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18b6d28c.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nfunction Todo(props) {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState(\"\");\r\n\r\n  const editFieldRef = useRef(null);\r\n  const editButtonRef = useRef(null);\r\n  const wasEditing = usePrevious(isEditing);\r\n\r\n  function handleChange(e) {\r\n    setNewName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.editTask(props.id, newName);\r\n    setNewName(\"\");\r\n    setEditing(false);\r\n  }\r\n\r\n  const editingTemplate = (\r\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <input\r\n          id={props.id}\r\n          className=\"todo-text\"\r\n          type=\"text\"\r\n          value={newName}\r\n          onChange={handleChange}\r\n          placeholder=\"Enter text here...\"\r\n          ref={editFieldRef}\r\n        />\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n          Save\r\n          <span className=\"visually-hidden\">the new note</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn todo-cancel\"\r\n          onClick={() => setEditing(false)}\r\n        >\r\n          Cancel\r\n          <span className=\"visually-hidden\">editing the note{props.name}</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n  const viewTemplate = (\r\n    <div className=\"stack-small\">\r\n      <div className=\"c-cb\">\r\n        <input\r\n          id={props.id}\r\n          type=\"checkbox\"\r\n          defaultChecked={props.completed}\r\n          onChange={() => props.toggleTaskCompleted(props.id)}\r\n        />\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          {props.name}\r\n        </label>\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn\"\r\n          onClick={() => setEditing(true)}\r\n          ref={editButtonRef}\r\n        >\r\n          Edit <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn__danger\"\r\n          onClick={() => props.deleteTask(props.id)}\r\n        >\r\n          Delete <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!wasEditing && isEditing) {\r\n      editFieldRef.current.focus();\r\n    }\r\n    if (wasEditing && !isEditing) {\r\n      editButtonRef.current.focus();\r\n    }\r\n  }, [wasEditing, isEditing]);\r\n\r\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction Form(props) {\r\n\r\n  const [name, setName] = useState('');  \r\n\r\n  function handleChange(e) {\r\n      setName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.addTask(name);\r\n    setName(\"\");\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        id=\"new-todo-input\"\r\n        className=\"input input__lg\"\r\n        name=\"text\"\r\n        autoComplete=\"off\"\r\n        value = {name}\r\n        onChange = {handleChange}\r\n        placeholder=\"Enter task here...\"\r\n      />\r\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nfunction FilterButton(props) {\r\n  return (\r\n    <button type=\"button\" \r\n            className=\"btn toggle-btn\" \r\n            aria-pressed={props.isPressed}\r\n            onClick={() => props.setFilter(props.name)}\r\n    >\r\n      <span className=\"visually-hidden\">Show </span>\r\n      <span>{props.name}</span>\r\n      <span className=\"visually-hidden\"> tasks</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default FilterButton;\r\n","import React, { useState, useRef, useEffect } from \"react\";\nimport Todo from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport { nanoid } from \"nanoid\";\nimport FilterButton from \"./components/FilterButton\";\nimport \"./App.css\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (task) => !task.completed,\n  Completed: (task) => task.completed,\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState(\"All\");\n\n  function addTask(name) {\n    // folosim nanoid pentru id-uri unice de task\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      if (id === task.id) {\n        if (!task.completed) {\n          alert('\"' + task.name + '\"' + \" completed! Well done!\");\n        }\n\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function editTask(id, newName) {\n    const updatedTasks = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, name: newName };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const updatedTasks = tasks.filter((task) => id !== task.id);\n    setTasks(updatedTasks);\n  }\n\n  const TaskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map((task) => (\n      <Todo\n        key={task.id}\n        name={task.name}\n        completed={task.completed}\n        id={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        editTask={editTask}\n        deleteTask={deleteTask}\n      />\n    ));\n\n  function completedTasks() {\n    return tasks.filter((task) => task.completed === true).length;\n  }\n\n  const FilterButtonList = FILTER_NAMES.map((name) => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  const tasksToGo = tasks.length - completedTasks();\n  const tasksToGoNoun = tasksToGo !== 1 ? \"tasks\" : \"task\";\n  const tasksCompleted = completedTasks();\n  const tasksCompletedNoun = tasksCompleted !== 1 ? \"tasks\" : \"task\";\n  const taskListHeadingText = `${tasksToGo} ${tasksToGoNoun} to go, ${tasksCompleted} ${tasksCompletedNoun} completed`;\n\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>{props.subject}'s To-Do List</h1>\n\n      <Form addTask={addTask} />\n\n      <h2 id=\"list-heading\" \n          tabIndex=\"-1\"\n          ref={listHeadingRef}\n      >{taskListHeadingText}</h2>\n\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {TaskList}\n      </ul>\n\n      <h2 id=\"filter-heading\">Sort tasks by:</h2>\n\n      <div className=\"filters btn-group stack-exception\">\n        {FilterButtonList}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst DATA = [\n  { id: \"todo-0\", name: \"Study the MDN React tutorial\", completed: true },\n  { id: \"todo-1\", name: \"Get 8 hours of sleep\", completed: false },\n  { id: \"todo-2\", name: \"Don't skip breakfast\", completed: false },\n  { id: \"todo-3\", name: \"Work out 30 minutes in the morning\", completed: false }\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App subject=\"Mihail\" tasks={DATA} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}